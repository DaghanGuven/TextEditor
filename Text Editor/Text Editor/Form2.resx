<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GAD/gAAA//gAAf/4AB//+AAf//gAH//8GB8=
</value>
  </data>
</root>